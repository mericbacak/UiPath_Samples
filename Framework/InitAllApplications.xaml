<Activity mc:Ignorable="sap sap2010" x:Class="Initialize_Applications" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:a="clr-namespace:ANKALogin;assembly=ANKALogin" xmlns:m="clr-namespace:MistralEkranLogin;assembly=MistralEkranLogin" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property sap2010:Annotation.AnnotationText="Dictionary structure to store configuration data of the process (settings, constants and assets)." Name="in_Config" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property Name="in_strExportDailyFolderPath" Type="InArgument(x:String)" />
    <x:Property Name="in_strExceptionDailyFolderPath" Type="InArgument(x:String)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1153,2637</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>Initialization_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="39">
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Management.Automation</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>System.Security</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>ANKALogin</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>UiPath.UIAutomationCore.Contracts</x:String>
      <x:String>UiPath.UIAutomationNext.Enums</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>KillAllProcess</x:String>
      <x:String>MistralEkranLogin</x:String>
      <x:String>UiPath.UIAutomationNext.Activities</x:String>
      <x:String>UiPath.Platform.ObjectLibrary</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>UiPath.Core.Activities.Orchestrator</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="74">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Management.Automation</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>TimeSpan2</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>ANKALogin</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>KillAllProcess</AssemblyReference>
      <AssemblyReference>MistralEkranLogin</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="Open applications used in the process and do necessary initialization procedures (e.g., login)." DisplayName="Initialize All Applications" sap:VirtualizedContainerService.HintSize="624,2572" sap2010:WorkflowViewState.IdRef="Sequence_9">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="strAkreditif995ExcelPath" />
      <Variable x:TypeArguments="x:String" Name="strTahsil995ExcelPath" />
      <Variable x:TypeArguments="x:String" Name="strAkreditif1116ExcelPath" />
      <Variable x:TypeArguments="x:String" Name="strTahsil1116ExcelPath" />
      <Variable x:TypeArguments="x:String" Name="strAkreditif1117ExcelPath" />
      <Variable x:TypeArguments="x:String" Name="strAkreditif1118ExcelPath" />
      <Variable x:TypeArguments="x:String" Name="strTahsil1117ExcelPath" />
      <Variable x:TypeArguments="x:String" Name="strTahsil1118ExcelPath" />
      <Variable x:TypeArguments="scg:IEnumerable(ui:QueueItem)" Name="QueueItems" />
      <Variable x:TypeArguments="x:String" Name="straastate" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="562,52" sap2010:WorkflowViewState.IdRef="CommentOut_3">
      <ui:CommentOut.Body>
        <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="400,328" sap2010:WorkflowViewState.IdRef="Sequence_16">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Throw sap2010:Annotation.AnnotationText="Test amaçlı sonra silinecek" DisplayName="Throw( BRE Test)" Exception="[new BusinessRuleException(&quot;INIT Business Rule Exception Test&quot;)]" sap:VirtualizedContainerService.HintSize="338,56" sap2010:WorkflowViewState.IdRef="Throw_2">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </Throw>
          <Throw sap2010:Annotation.AnnotationText="test amaçlı sonra delete" Exception="[new SystemException(&quot;INIT fail test system exception&quot;)]" sap:VirtualizedContainerService.HintSize="338,56" sap2010:WorkflowViewState.IdRef="Throw_1">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </Throw>
          <m:MistralScreenLogin DisplayName="MistralScreenLogin(HYKI)" EkranAcilisiDenemeSayisi="3" EkranAcilisiTimeout="240" sap:VirtualizedContainerService.HintSize="338,25" sap2010:WorkflowViewState.IdRef="MistralScreenLogin_4" MistralScreenName="HYKI" NextralMi="1" />
        </Sequence>
      </ui:CommentOut.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:CommentOut>
    <a:AnkaLogin AnkaShellAcilisTimeOut="300" AnkaShellAcilisiDenemeSayisi="3" sap:VirtualizedContainerService.HintSize="562,25" sap2010:WorkflowViewState.IdRef="AnkaLogin_1" KullaniciDegistirUserName="TXXX958" />
    <m:MistralScreenLogin DisplayName="MistralScreenLogin(VPIZ)" EkranAcilisiDenemeSayisi="5" EkranAcilisiTimeout="240" sap:VirtualizedContainerService.HintSize="562,25" sap2010:WorkflowViewState.IdRef="MistralScreenLogin_1" MistralScreenName="VPIZ" NextralMi="0" />
    <ui:Click AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" sap2010:Annotation.AnnotationText="Bir önceki transaction kalan bir uyarı mesajı varsa temizleme için" ClickType="CLICK_SINGLE" ContinueOnError="True" DisplayName="Click 'Tamam'" sap:VirtualizedContainerService.HintSize="562,149" sap2010:WorkflowViewState.IdRef="Click_1" KeyModifiers="None" MouseButton="BTN_LEFT">
      <ui:Click.CursorPosition>
        <ui:CursorPosition Position="Center">
          <ui:CursorPosition.OffsetX>
            <InArgument x:TypeArguments="x:Int32" />
          </ui:CursorPosition.OffsetX>
          <ui:CursorPosition.OffsetY>
            <InArgument x:TypeArguments="x:Int32" />
          </ui:CursorPosition.OffsetY>
        </ui:CursorPosition>
      </ui:Click.CursorPosition>
      <ui:Click.Target>
        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="dfe2feca-5567-44c7-9ee9-135b5bbf2daa" InformativeScreenshot="03bbb803c7886babadc0206f32777ac2" Selector="&lt;wnd app='eze2img.exe' cls='SHELL' title='Mesaj' /&gt;&lt;wnd cls='OSBUTTON' title='Tamam' /&gt;" TimeoutMS="1500" WaitForReady="COMPLETE" />
      </ui:Click.Target>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:Click>
    <ui:GetAttribute ContinueOnError="{x:Null}" Attribute="aastate" DisplayName="Get Attribute 'Ara'" sap:VirtualizedContainerService.HintSize="562,203" sap2010:WorkflowViewState.IdRef="GetAttribute_1">
      <ui:GetAttribute.Result>
        <OutArgument x:TypeArguments="x:String">[straastate]</OutArgument>
      </ui:GetAttribute.Result>
      <ui:GetAttribute.Target>
        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="883490ee-c493-4334-9f2c-90494fbff2d3" InformativeScreenshot="e8e7e84e62db05c56998f18dbbf6ff4b" Selector="&lt;wnd app='eze2img.exe' cls='SHELL' title='VPIZ - Vesaik / Poliçe Portföy İzleme' /&gt;&lt;wnd cls='OSBUTTON' title='Ara' /&gt;">
          <ui:Target.TimeoutMS>
            <InArgument x:TypeArguments="x:Int32" />
          </ui:Target.TimeoutMS>
          <ui:Target.WaitForReady>
            <InArgument x:TypeArguments="ui:WaitForReady" />
          </ui:Target.WaitForReady>
        </ui:Target>
      </ui:GetAttribute.Target>
    </ui:GetAttribute>
    <If sap2010:Annotation.AnnotationText="ara butonu unavailable ise VPIZ aç kapa" Condition="[straastate.Contains(&quot;unavailable&quot;)]" sap:VirtualizedContainerService.HintSize="562,528" sap2010:WorkflowViewState.IdRef="If_4">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <If.Then>
        <Sequence DisplayName="VPIZ restart" sap:VirtualizedContainerService.HintSize="400,309" sap2010:WorkflowViewState.IdRef="Sequence_20">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:KillProcess AppliesTo="{x:Null}" Process="{x:Null}" ContinueOnError="True" DisplayName="Kill EZE2IMG" sap:VirtualizedContainerService.HintSize="338,133" sap2010:WorkflowViewState.IdRef="KillProcess_1" ProcessName="EZE2IMG" />
          <m:MistralScreenLogin DisplayName="MistralScreenLogin(VPIZ)" EkranAcilisiDenemeSayisi="5" EkranAcilisiTimeout="240" sap:VirtualizedContainerService.HintSize="338,25" sap2010:WorkflowViewState.IdRef="MistralScreenLogin_5" MistralScreenName="VPIZ" NextralMi="1" />
        </Sequence>
      </If.Then>
      <If.Else>
        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_21">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </Sequence>
      </If.Else>
    </If>
    <m:MistralScreenLogin DisplayName="MistralScreenLogin(AKAC)" EkranAcilisiDenemeSayisi="5" EkranAcilisiTimeout="240" sap:VirtualizedContainerService.HintSize="562,25" sap2010:WorkflowViewState.IdRef="MistralScreenLogin_2" MistralScreenName="AKAC" NextralMi="0" />
    <m:MistralScreenLogin DisplayName="MistralScreenLogin(ISAC)" EkranAcilisiDenemeSayisi="5" EkranAcilisiTimeout="240" sap:VirtualizedContainerService.HintSize="562,25" sap2010:WorkflowViewState.IdRef="MistralScreenLogin_3" MistralScreenName="ISAC" NextralMi="0" />
    <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="562,308" sap2010:WorkflowViewState.IdRef="TryCatch_2">
      <TryCatch.Try>
        <ui:GetQueueItems Duration="{x:Null}" From="{x:Null}" Priority="{x:Null}" Reference="{x:Null}" Skip="{x:Null}" To="{x:Null}" Top="{x:Null}" DisplayName="Get Queue Items" FilterStrategy="StartsWith" sap:VirtualizedContainerService.HintSize="320,80" sap2010:WorkflowViewState.IdRef="GetQueueItems_4" QueueItemStates="New" QueueName="[in_Config(&quot;OrchestratorQueueName&quot;).ToString]" Result="[QueueItems]" TimeoutMS="180000" />
      </TryCatch.Try>
      <TryCatch.Catches>
        <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="404,21" sap2010:WorkflowViewState.IdRef="Catch`1_2">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ActivityAction x:TypeArguments="s:Exception">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
            </ActivityAction.Argument>
            <ui:GetQueueItems Duration="{x:Null}" From="{x:Null}" Priority="{x:Null}" Reference="{x:Null}" Skip="{x:Null}" To="{x:Null}" Top="{x:Null}" DisplayName="Get Queue Items" FilterStrategy="StartsWith" sap:VirtualizedContainerService.HintSize="286,80" sap2010:WorkflowViewState.IdRef="GetQueueItems_5" QueueItemStates="New" QueueName="[in_Config(&quot;RPA054_958_Vesaik&quot;).ToString]" Result="[QueueItems]" TimeoutMS="180000" />
          </ActivityAction>
        </Catch>
      </TryCatch.Catches>
    </TryCatch>
    <If Condition="[QueueItems.Count=0]" sap:VirtualizedContainerService.HintSize="562,730" sap2010:WorkflowViewState.IdRef="If_2">
      <If.Then>
        <Sequence DisplayName="No Items" sap:VirtualizedContainerService.HintSize="526,543" sap2010:WorkflowViewState.IdRef="Sequence_17">
          <Sequence.Variables>
            <Variable x:TypeArguments="x:Boolean" Name="BoolExportExist" />
          </Sequence.Variables>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke VPIZSearch workflow" sap:VirtualizedContainerService.HintSize="484,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" UnSafe="False" WorkflowFileName="Process\SearchSteps\VPIZSearch.xaml">
            <ui:InvokeWorkflowFile.Arguments>
              <InArgument x:TypeArguments="x:String" x:Key="in_strExportDailyFolderPath">[in_strExportDailyFolderPath]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_strExceptionDailyFolderPath">[in_strExceptionDailyFolderPath]</InArgument>
              <OutArgument x:TypeArguments="x:String" x:Key="out_strAkreditif995ExcelPath">[strAkreditif995ExcelPath]</OutArgument>
              <OutArgument x:TypeArguments="x:String" x:Key="out_strTahsil995ExcelPath">[strTahsil995ExcelPath]</OutArgument>
              <OutArgument x:TypeArguments="x:String" x:Key="out_strAkreditif1116ExcelPath">[strAkreditif1116ExcelPath]</OutArgument>
              <OutArgument x:TypeArguments="x:String" x:Key="out_strTahsil1116ExcelPath">[strTahsil1116ExcelPath]</OutArgument>
              <OutArgument x:TypeArguments="x:String" x:Key="out_strAkreditif1117ExcelPath">[strAkreditif1117ExcelPath]</OutArgument>
              <OutArgument x:TypeArguments="x:String" x:Key="out_strTahsil1117ExcelPath">[strTahsil1117ExcelPath]</OutArgument>
              <OutArgument x:TypeArguments="x:String" x:Key="out_strTahsil1118ExcelPath">[strTahsil1118ExcelPath]</OutArgument>
              <OutArgument x:TypeArguments="x:String" x:Key="out_strAkreditif1118ExcelPath">[strAkreditif1118ExcelPath]</OutArgument>
              <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[in_Config]</InArgument>
              <OutArgument x:TypeArguments="x:Boolean" x:Key="out_BoolExportExist">[BoolExportExist]</OutArgument>
            </ui:InvokeWorkflowFile.Arguments>
          </ui:InvokeWorkflowFile>
          <If Condition="[BoolExportExist.Equals(True)]" sap:VirtualizedContainerService.HintSize="484,299" sap2010:WorkflowViewState.IdRef="If_3">
            <If.Then>
              <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Add2Q workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="Process\Add2Q.xaml">
                <ui:InvokeWorkflowFile.Arguments>
                  <InArgument x:TypeArguments="x:String" x:Key="in_strOrchestratorQueueName">[in_Config("OrchestratorQueueName").ToString]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_strTahsilExportExcelPath995">[strTahsil995ExcelPath]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_strAkreditifExportExcelPath995">[strAkreditif995ExcelPath]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_strTahsilExportExcelPath1116">[strTahsil1116ExcelPath]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_strAkreditifExportExcelPath1116">[strAkreditif1116ExcelPath]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_strTahsilExportExcelPath1117">[strTahsil1117ExcelPath]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_strAkreditifExportExcelPath1117">[strAkreditif1117ExcelPath]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_strTahsilExportExcelPath1118">[strTahsil1118ExcelPath]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_strAkreditifExportExcelPath1118">[strAkreditif1118ExcelPath]</InArgument>
                </ui:InvokeWorkflowFile.Arguments>
              </ui:InvokeWorkflowFile>
            </If.Then>
            <If.Else>
              <Sequence sap2010:WorkflowViewState.IdRef="Sequence_19">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </Sequence>
            </If.Else>
          </If>
        </Sequence>
      </If.Then>
      <If.Else>
        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_18">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </Sequence>
      </If.Else>
    </If>
  </Sequence>
</Activity>