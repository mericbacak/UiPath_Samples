<Activity mc:Ignorable="sap sap2010" x:Class="ADD2Q" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:i="clr-namespace:InitAllSettings;assembly=InitAllSettings" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:sc="clr-namespace:System.ComponentModel;assembly=System" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_Config" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property Name="out_strProcessExcel" Type="OutArgument(x:String)" />
    <x:Property sap2010:Annotation.AnnotationText="&quot;\\Trpafs01\rpa001\TEST\OUTPUT\RPA091_988_SMSBlokeKaldirma\ExcelFolderPath\İşlemeAlınacaklar\07032023\&quot;" Name="in_strDailyToBeProcessExcelFolderPath" Type="InArgument(x:String)" />
    <x:Property Name="out_strYGDB124ProcessExcelPath" Type="OutArgument(x:String)" />
    <x:Property Name="in_QItems" Type="InArgument(scg:IEnumerable(ui:QueueItem))" />
    <x:Property Name="out_strYGDB124ExcelSheet" Type="OutArgument(x:String)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1104,2103</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>SelectProcessExcel_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="38">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>MistralEkranLogin</x:String>
      <x:String>UiPath.UIAutomationCore.Contracts</x:String>
      <x:String>UiPath.UIAutomationNext.Enums</x:String>
      <x:String>UiPath.UIAutomationNext.Activities</x:String>
      <x:String>UiPath.Platform.ObjectLibrary</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>UiPath.DataTableUtilities</x:String>
      <x:String>InitAllSettings</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="38">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>MistralEkranLogin</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Data.Entity</AssemblyReference>
      <AssemblyReference>InitAllSettings</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="ADD2Q" sap:VirtualizedContainerService.HintSize="695,2038" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="ui:WorkbookApplication" Name="WB" />
      <Variable x:TypeArguments="x:String" Name="strSheet" />
      <Variable x:TypeArguments="sd:DataTable" Name="dt_ProcessList" />
      <Variable x:TypeArguments="x:String" Name="strOrchQueueName" />
      <Variable x:TypeArguments="x:String" Name="strMusteriNo" />
      <Variable x:TypeArguments="x:String" Name="strYGDB124Excel" />
      <Variable x:TypeArguments="x:String" Name="strHubFolderPath" />
      <Variable x:TypeArguments="x:String" Name="strDay" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="653,51" sap2010:WorkflowViewState.IdRef="CommentOut_1">
      <ui:CommentOut.Body>
        <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="522,158" sap2010:WorkflowViewState.IdRef="Sequence_13">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Sequence DisplayName="First run" sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_11">
            <Sequence.Variables>
              <Variable x:TypeArguments="x:String" Name="strConfigExcelPath" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <TryCatch sap2010:Annotation.AnnotationText="Config excelpath assetten çekiilir." DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="438,395" sap2010:WorkflowViewState.IdRef="TryCatch_2">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <TryCatch.Try>
                <ui:GetRobotAsset AssetName="RPA091_Config" DisplayName="Get Asset" sap:VirtualizedContainerService.HintSize="334,137" sap2010:WorkflowViewState.IdRef="GetRobotAsset_1" TimeoutMS="300000">
                  <ui:GetRobotAsset.Value>
                    <OutArgument x:TypeArguments="x:String">[strConfigExcelPath]</OutArgument>
                  </ui:GetRobotAsset.Value>
                </ui:GetRobotAsset>
              </TryCatch.Try>
              <TryCatch.Catches>
                <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="404,21" sap2010:WorkflowViewState.IdRef="Catch`1_2">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ActivityAction x:TypeArguments="s:Exception">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                    </ActivityAction.Argument>
                    <ui:GetRobotAsset AssetName="RPA015ConfigExcel" DisplayName="Get Asset" sap:VirtualizedContainerService.HintSize="334,137" sap2010:WorkflowViewState.IdRef="GetRobotAsset_2" TimeoutMS="300000">
                      <ui:GetRobotAsset.Value>
                        <OutArgument x:TypeArguments="x:String">[strConfigExcelPath]</OutArgument>
                      </ui:GetRobotAsset.Value>
                    </ui:GetRobotAsset>
                  </ActivityAction>
                </Catch>
              </TryCatch.Catches>
              <TryCatch.Finally>
                <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_6" Level="Info" Message="[strConfigExcelPath+&quot; dizinindeki excel Config olarak okundu&quot;]" />
              </TryCatch.Finally>
            </TryCatch>
            <i:InitAllSettings sap:VirtualizedContainerService.HintSize="438,22" sap2010:WorkflowViewState.IdRef="InitAllSettings_1" in_ConfigFile="[strConfigExcelPath]" in_ConfigSheets="[{&quot;Settings&quot;, &quot;Constants&quot;}]" out_Config="[in_Config]" />
          </Sequence>
        </Sequence>
      </ui:CommentOut.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:CommentOut>
    <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="653,193" sap2010:WorkflowViewState.IdRef="MultipleAssign_1">
      <ui:MultipleAssign.AssignOperations>
        <scg:List x:TypeArguments="ui:AssignOperation" Capacity="8">
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_2">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">[strOrchQueueName]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">[in_Config("OrchestratorQueueName").ToString]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_3">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">[strYGDB124Excel]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">[in_Config("taslakExcel").ToString]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_4">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">[strHubFolderPath]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">[in_Config("ExcelFolderPath").ToString]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_5">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">[strDay]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">[DateTime.now.ToString("ddMMyyyy_HHmmss")]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
        </scg:List>
      </ui:MultipleAssign.AssignOperations>
    </ui:MultipleAssign>
    <ui:IfElseIf DisplayName="Else If" sap:VirtualizedContainerService.HintSize="653,975" sap2010:WorkflowViewState.IdRef="IfElseIf_2">
      <ui:IfElseIf.ConditionBlocks>
        <sc:BindingList x:TypeArguments="ui:IfElseIfBlock" AllowEdit="True" AllowNew="True" AllowRemove="True" RaiseListChangedEvents="True">
          <ui:IfElseIfBlock BlockType="If" Condition="[in_QItems.Count.Equals(0)]">
            <ui:IfElseIfBlock.Then>
              <Sequence DisplayName="NeedAdd2Q" sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_14">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="560,688" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[Directory.GetFiles(in_strDailyToBeProcessExcelFolderPath)]">
                  <ui:ForEach.Body>
                    <ActivityAction x:TypeArguments="x:Object">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="x:Object" Name="item" />
                      </ActivityAction.Argument>
                      <Sequence DisplayName="FolderLoop" sap:VirtualizedContainerService.HintSize="493,565" sap2010:WorkflowViewState.IdRef="Sequence_2">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:IfElseIf DisplayName="Else If" sap:VirtualizedContainerService.HintSize="451,473" sap2010:WorkflowViewState.IdRef="IfElseIf_1">
                          <ui:IfElseIf.ConditionBlocks>
                            <sc:BindingList x:TypeArguments="ui:IfElseIfBlock" AllowEdit="True" AllowNew="True" AllowRemove="True" RaiseListChangedEvents="True">
                              <ui:IfElseIfBlock BlockType="If" Condition="[item.ToString.Contains(&quot;.xlsx&quot;) and item.ToString.Contains(&quot;robot&quot;) And item.ToString.Contains(&quot;excel&quot;)]">
                                <ui:IfElseIfBlock.Then>
                                  <Sequence DisplayName="SelectExcel" sap:VirtualizedContainerService.HintSize="376,279" sap2010:WorkflowViewState.IdRef="Sequence_3">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_1">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">[out_strProcessExcel]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">[item.ToString]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[&quot;İşleme alınacak excel: &quot;+out_strProcessExcel.ToString+&quot; olarak belirlendi.&quot;]" />
                                  </Sequence>
                                </ui:IfElseIfBlock.Then>
                              </ui:IfElseIfBlock>
                            </sc:BindingList>
                          </ui:IfElseIf.ConditionBlocks>
                        </ui:IfElseIf>
                      </Sequence>
                    </ActivityAction>
                  </ui:ForEach.Body>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:ForEach>
                <If Condition="[out_strProcessExcel is Nothing]" sap:VirtualizedContainerService.HintSize="560,481" sap2010:WorkflowViewState.IdRef="If_2">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <If.Then>
                    <Sequence DisplayName="BRE1" sap:VirtualizedContainerService.HintSize="476,315" sap2010:WorkflowViewState.IdRef="Sequence_8">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:OpenApplication ApplicationWindow="{x:Null}" WorkingDirectory="{x:Null}" Arguments="[in_strDailyToBeProcessExcelFolderPath]" DisplayName="Open Application 'explorer.exe  RPA091_98...'" FileName="C:\Windows\explorer.exe" sap:VirtualizedContainerService.HintSize="434,161" sap2010:WorkflowViewState.IdRef="OpenApplication_1" InformativeScreenshot="a0f884b455275e80390cf1290a262a67" Selector="&lt;wnd app='explorer.exe' /&gt;" TimeoutMS="120000">
                        <ui:OpenApplication.Body>
                          <ActivityAction x:TypeArguments="x:Object">
                            <ActivityAction.Argument>
                              <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
                            </ActivityAction.Argument>
                          </ActivityAction>
                        </ui:OpenApplication.Body>
                      </ui:OpenApplication>
                      <Throw DisplayName="Throw(BRE)" Exception="[New BusinessRuleException(&quot;Robotun işleyeceği excel bulunmamaktadır.&quot;)]" sap:VirtualizedContainerService.HintSize="434,22" sap2010:WorkflowViewState.IdRef="Throw_1" />
                    </Sequence>
                  </If.Then>
                  <If.Else>
                    <Sequence sap2010:WorkflowViewState.IdRef="Sequence_12">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </Sequence>
                  </If.Else>
                </If>
                <ui:ExcelApplicationScope Password="{x:Null}" AutoSave="False" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="560,169" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_1" InstanceCachePeriod="3000" ReadOnly="True" Visible="False" Workbook="[WB]" WorkbookPath="[out_strProcessExcel]">
                  <ui:ExcelApplicationScope.Body>
                    <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                      </ActivityAction.Argument>
                      <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_2">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[strSheet]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[WB.GetSheets(0)]</InArgument>
                        </Assign.Value>
                      </Assign>
                    </ActivityAction>
                  </ui:ExcelApplicationScope.Body>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:ExcelApplicationScope>
                <ui:ExcelCloseWorkbook DisplayName="Close Workbook" sap:VirtualizedContainerService.HintSize="560,59" sap2010:WorkflowViewState.IdRef="ExcelCloseWorkbook_1" Workbook="[WB]">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:ExcelCloseWorkbook>
                <ui:ReadRange AddHeaders="True" DataTable="[dt_ProcessList]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="560,87" sap2010:WorkflowViewState.IdRef="ReadRange_1" SheetName="[strSheet]" WorkbookPath="[out_strProcessExcel]">
                  <ui:ReadRange.Range>
                    <InArgument x:TypeArguments="x:String">
                      <Literal x:TypeArguments="x:String" Value="" />
                    </InArgument>
                  </ui:ReadRange.Range>
                </ui:ReadRange>
                <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DataTable="[dt_ProcessList]" DisplayName="For Each Row in Data Table" sap:VirtualizedContainerService.HintSize="560,1225" sap2010:WorkflowViewState.IdRef="ForEachRow_1">
                  <ui:ForEachRow.Body>
                    <ActivityAction x:TypeArguments="sd:DataRow">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="sd:DataRow" Name="CurrentRow" />
                      </ActivityAction.Argument>
                      <Sequence DisplayName="Add2Q" sap:VirtualizedContainerService.HintSize="526,1106" sap2010:WorkflowViewState.IdRef="Sequence_4">
                        <Sequence.Variables>
                          <Variable x:TypeArguments="x:Int32" Default="0" Name="intCount" />
                          <Variable x:TypeArguments="x:Int32" Default="1" Name="intresult" />
                        </Sequence.Variables>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Assign sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_5">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[strMusteriNo]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[CurrentRow(0).ToString.Trim]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="484,506" sap2010:WorkflowViewState.IdRef="TryCatch_1">
                          <TryCatch.Try>
                            <ui:AddQueueItem ServiceBaseAddress="{x:Null}" DisplayName="Add Queue Item" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="AddQueueItem_1" Priority="Normal" QueueType="[strOrchQueueName]" Reference="[strMusteriNo]" TimeoutMS="120000">
                              <ui:AddQueueItem.ItemInformation>
                                <InArgument x:TypeArguments="x:String" x:Key="MusteriNo">[strMusteriNo]</InArgument>
                              </ui:AddQueueItem.ItemInformation>
                            </ui:AddQueueItem>
                          </TryCatch.Try>
                          <TryCatch.Catches>
                            <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="404,21" sap2010:WorkflowViewState.IdRef="Catch`1_1">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ActivityAction x:TypeArguments="s:Exception">
                                <ActivityAction.Argument>
                                  <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                </ActivityAction.Argument>
                                <ui:AddQueueItem ServiceBaseAddress="{x:Null}" DisplayName="Add Queue Item" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="AddQueueItem_3" Priority="Normal" QueueType="[strOrchQueueName]" Reference="[strMusteriNo]" TimeoutMS="120000">
                                  <ui:AddQueueItem.ItemInformation>
                                    <InArgument x:TypeArguments="x:String" x:Key="MusteriNo">[strMusteriNo]</InArgument>
                                  </ui:AddQueueItem.ItemInformation>
                                </ui:AddQueueItem>
                              </ActivityAction>
                            </Catch>
                          </TryCatch.Catches>
                          <TryCatch.Finally>
                            <Sequence sap:VirtualizedContainerService.HintSize="376,279" sap2010:WorkflowViewState.IdRef="Sequence_10">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_6">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:Int32">[intCount]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:Int32">[intCount+1]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="LogMessage_4" Level="Info" Message="[strMusteriNo+&quot; müşterisi &quot;+strOrchQueueName+&quot; kuyruğuna eklendi.&quot;]" />
                            </Sequence>
                          </TryCatch.Finally>
                        </TryCatch>
                        <Assign sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_7">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Int32">[intresult]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Int32">[intCount Mod 500]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <If sap2010:Annotation.AnnotationText="ilk aşamada çok büyük bir müşteri listesi (100k veya üzzerinde) geldiğinde add2Q ile orchestratorda hata almamak için her 500 add2Q arasına 2sn delay atılır" Condition="[intresult.Equals(0)]" sap:VirtualizedContainerService.HintSize="484,268" sap2010:WorkflowViewState.IdRef="If_1">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <If.Then>
                            <Delay DisplayName="Delay(2sn)" Duration="[TimeSpan.FromSeconds(2)]" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Delay_2" />
                          </If.Then>
                          <If.Else>
                            <Sequence sap:VirtualizedContainerService.HintSize="200,83" sap2010:WorkflowViewState.IdRef="Sequence_9">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </Sequence>
                          </If.Else>
                        </If>
                      </Sequence>
                    </ActivityAction>
                  </ui:ForEachRow.Body>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:ForEachRow>
              </Sequence>
            </ui:IfElseIfBlock.Then>
          </ui:IfElseIfBlock>
          <ui:IfElseIfBlock BlockType="Else">
            <ui:IfElseIfBlock.Then>
              <Sequence DisplayName="Already Have QItems" sap:VirtualizedContainerService.HintSize="571,684" sap2010:WorkflowViewState.IdRef="Sequence_15">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="herhangi bir sebeple robot hata alırsa ilgili excelin lokasyonu robota belirtilmeli" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="529,592" sap2010:WorkflowViewState.IdRef="ForEach`1_2" Values="[Directory.GetFiles(in_strDailyToBeProcessExcelFolderPath)]">
                  <ui:ForEach.Body>
                    <ActivityAction x:TypeArguments="x:Object">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="x:Object" Name="item" />
                      </ActivityAction.Argument>
                      <Sequence DisplayName="FolderLoop" sap:VirtualizedContainerService.HintSize="493,438" sap2010:WorkflowViewState.IdRef="Sequence_17">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:IfElseIf DisplayName="Else If" sap:VirtualizedContainerService.HintSize="451,346" sap2010:WorkflowViewState.IdRef="IfElseIf_3">
                          <ui:IfElseIf.ConditionBlocks>
                            <sc:BindingList x:TypeArguments="ui:IfElseIfBlock" AllowEdit="True" AllowNew="True" AllowRemove="True" RaiseListChangedEvents="True">
                              <ui:IfElseIfBlock BlockType="If" Condition="[item.ToString.Contains(&quot;.xlsx&quot;) and item.ToString.Contains(&quot;robot&quot;) And item.ToString.Contains(&quot;excel&quot;)]">
                                <ui:IfElseIfBlock.Then>
                                  <Sequence DisplayName="SelectExcel" sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_16">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_11">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">[out_strProcessExcel]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">[item.ToString]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                  </Sequence>
                                </ui:IfElseIfBlock.Then>
                              </ui:IfElseIfBlock>
                            </sc:BindingList>
                          </ui:IfElseIf.ConditionBlocks>
                        </ui:IfElseIf>
                      </Sequence>
                    </ActivityAction>
                  </ui:ForEach.Body>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:ForEach>
              </Sequence>
            </ui:IfElseIfBlock.Then>
          </ui:IfElseIfBlock>
        </sc:BindingList>
      </ui:IfElseIf.ConditionBlocks>
    </ui:IfElseIf>
    <Assign sap:VirtualizedContainerService.HintSize="653,60" sap2010:WorkflowViewState.IdRef="Assign_8">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[out_strYGDB124ProcessExcelPath]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[strHubFolderPath+"robotExcel_"+strDay+".xlsx"]</InArgument>
      </Assign.Value>
    </Assign>
    <ui:CopyFile ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="bizim taslak excel(içi boş), işlem yapılacaklar ile tamamlananların olduğu klaösre kopyalanır." Destination="[out_strYGDB124ProcessExcelPath]" DisplayName="Copy File" sap:VirtualizedContainerService.HintSize="653,199" sap2010:WorkflowViewState.IdRef="CopyFile_1" Overwrite="False" Path="[strYGDB124Excel]">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:CopyFile>
    <ui:ExcelApplicationScope Password="{x:Null}" AutoSave="False" CreateNewFile="False" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="653,169" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_2" InstanceCachePeriod="3000" ReadOnly="True" Visible="False" Workbook="[WB]" WorkbookPath="[out_strYGDB124ProcessExcelPath]">
      <ui:ExcelApplicationScope.Body>
        <ActivityAction x:TypeArguments="ui:WorkbookApplication">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
          </ActivityAction.Argument>
          <Assign DisplayName="Assign(strSheet)" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_12">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[out_strYGDB124ExcelSheet]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[WB.GetSheets(0)]</InArgument>
            </Assign.Value>
          </Assign>
        </ActivityAction>
      </ui:ExcelApplicationScope.Body>
    </ui:ExcelApplicationScope>
    <ui:ExcelCloseWorkbook DisplayName="Close Workbook" sap:VirtualizedContainerService.HintSize="653,59" sap2010:WorkflowViewState.IdRef="ExcelCloseWorkbook_2" Workbook="[WB]" />
  </Sequence>
</Activity>